# GitHub Actions Workflow for Production Deployment
# Automatically deploys to Render when changes are pushed to master

name: Deploy to Production

on:
  push:
    branches:
      - master
  workflow_dispatch: # Allow manual trigger

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Run tests
        run: dotnet test --no-restore --verbosity normal

  deploy-backend:
    name: Deploy Backend to Render
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Trigger Render Deploy
        run: |
          curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK }}"

      - name: Wait for deployment
        run: sleep 60

      - name: Health Check
        run: |
          response=$(curl -s -o /dev/null -w "%{http_code}" https://api.signalcopilot.com/api/health)
          if [ $response -eq 200 ]; then
            echo "Backend deployed successfully!"
          else
            echo "Backend health check failed with status: $response"
            exit 1
          fi

  deploy-frontend:
    name: Deploy Frontend to Vercel
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Trigger Vercel Deploy
        run: |
          curl -X POST "${{ secrets.VERCEL_DEPLOY_HOOK }}"

  notify:
    name: Send Deployment Notification
    needs: [deploy-backend, deploy-frontend]
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Notify Slack (Optional)
        if: always()
        run: |
          if [ "${{ needs.deploy-backend.result }}" == "success" ] && [ "${{ needs.deploy-frontend.result }}" == "success" ]; then
            echo "Deployment successful!"
            # Add Slack webhook here if needed
          else
            echo "Deployment failed!"
            # Add Slack webhook here if needed
          fi

# Required GitHub Secrets:
# - RENDER_DEPLOY_HOOK: https://api.render.com/deploy/srv-xxx?key=xxx
# - VERCEL_DEPLOY_HOOK: https://api.vercel.com/v1/integrations/deploy/xxx
#
# To get these:
# Render: Dashboard → Service → Settings → Deploy Hook
# Vercel: Project Settings → Git → Deploy Hooks → Create Hook
